import discord
from datetime import datetime, timedelta
import pytz
import asyncio

SweetDessert_role = 1218124815378940035
mention_role = f"<@&{SweetDessert_role}>"
TZ_THAILAND = pytz.timezone('Asia/Bangkok')

class Miniboss:
    def __init__(self, bot, name, spawn_time_range, color, image_url=None):
        self.bot = bot
        self.name = name
        self.spawn_time_range = spawn_time_range
        self.color = color
        self.image = image_url
        self.instances = []  # ‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö instances ‡∏Ç‡∏≠‡∏á death_time ‡πÅ‡∏•‡∏∞ location

    def add_death_time(self, death_time_str):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢"""
        try:
            now = datetime.now(TZ_THAILAND)
            death_time = datetime.strptime(death_time_str, '%H:%M').replace(
                year=now.year, month=now.month, day=now.day)
            death_time = TZ_THAILAND.localize(death_time)
            self.death_time = death_time  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ death_time
            return True
        except ValueError:
            return False

    def calculate_spawn_time(self, death_time):
        """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
        min_spawn_time = death_time + timedelta(hours=self.spawn_time_range[0])
        max_spawn_time = death_time + timedelta(hours=self.spawn_time_range[1])
        return (min_spawn_time, max_spawn_time)

    def get_spawn_location(self):
        """‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏µ"""
        if self.color == "#000000":
            return "‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏™‡∏µ‡∏î‡∏≥"
        elif self.color == "#FF0000":
            return "‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏™‡∏µ‡πÅ‡∏î‡∏á"
        elif self.color == "#0000FF":
            return "‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏™‡∏µ‡∏ü‡πâ‡∏≤"
        elif self.color == "#00FF00":
            return "‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß"
        else:
            return "‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô"

    async def check_spawn_time(self, channel):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î"""
        while True:
            await asyncio.sleep(60)
            current_time = datetime.now(TZ_THAILAND)

            for death_time, location in self.instances[:]:  # ‡πÉ‡∏ä‡πâ copy ‡∏Ç‡∏≠‡∏á list ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
                spawn_time = self.calculate_spawn_time(death_time)

                if spawn_time[0] <= current_time <= spawn_time[1]:
                    spawn_location_description = self.get_spawn_location()
                    await channel.send(f"{mention_role} ‡∏ö‡∏≠‡∏™ {self.name} ‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß {spawn_location_description} {location}!") 
                    embed = discord.Embed(
                        title=f"‡∏ö‡∏≠‡∏™ {self.name} ‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß {location}! üéâ",
                        description=(f"‡∏ö‡∏≠‡∏™ {self.name} ‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà {spawn_location_description} {location}.\n"
                                     f"‚è≥ ‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ **{spawn_time[0].strftime('%H:%M')} - {spawn_time[1].strftime('%H:%M')}**."),
                        color=discord.Color.from_str(self.color)
                    )
                    if self.image:
                        embed.set_image(url=self.image)
                    await channel.send(embed=embed)

                    self.instances.remove((death_time, location))  # ‡∏•‡∏ö instance ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å

    async def spawn(self, input_str, channel):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î"""
        print(f"Input String: '{input_str}'")  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        input_parts = input_str.split()  # ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏≤
        print(f"Input Parts: {input_parts}")  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÑ‡∏î‡πâ
        death_time_str = input_parts[0]
        location = ' '.join(input_parts[1:]) if len(input_parts) > 1 else ""  # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏≤‡∏Å input

        if self.add_death_time(death_time_str):
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô instances ‡πÄ‡∏õ‡πá‡∏ô tuple
            self.instances.append((self.death_time, location))  # ‡πÄ‡∏û‡∏¥‡πà‡∏° instance ‡πÉ‡∏´‡∏°‡πà
            death_time, _ = self.instances[-1]  # ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            spawn_times = self.calculate_spawn_time(death_time)
            spawn_location_description = self.get_spawn_location()

            # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed
            embed = discord.Embed(
                title=f"ü¶π‚Äç‚ôÇÔ∏è ‡∏ö‡∏≠‡∏™ {self.name} ‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß {location}",  # ‡πÄ‡∏û‡∏¥‡πà‡∏° location ‡πÉ‡∏ô title
                description=( 
                    f"üïí ‡∏ö‡∏≠‡∏™ {self.name} ‡∏ï‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ **{death_time_str}**.\n"
                    f"‚è≥ ‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ **{spawn_times[0].strftime('%H:%M')} - {spawn_times[1].strftime('%H:%M')}**.\n"
                    f"‡πÇ‡∏î‡∏¢‡πÄ‡∏Å‡∏¥‡∏î‡∏ó‡∏µ‡πà {spawn_location_description} {location}"  # ‡πÄ‡∏û‡∏¥‡πà‡∏° location ‡πÉ‡∏ô description
                ),
                color=discord.Color.from_str(self.color)
            )
            if self.image:
                embed.set_image(url=self.image)
            await channel.send(embed=embed)

            await self.check_spawn_time(channel)
        else:
            await channel.send("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö HH:MM")
